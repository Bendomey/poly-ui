# This is a basic workflow to help you get started with Actions

name: Prod Workflow

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ prod ]
  pull_request:
    branches: [ prod ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - id: yarn-cache
        name: Get Yarn cache path
        run: echo "::set-output name=dir::$(yarn cache dir)"
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 12.x
        uses: actions/setup-node@master
        with:
          node-version: 12.x
          
      - uses: actions/cache@v2
        name: Load Yarn cache
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Dependencies
        run: yarn install --frozen-lockfile && yarn bootstrap
        
      - name: Setup CI Git User
        run: |
          git config --global user.email "domeybenjamin1@gmail.com"
          git config --global user.name "Domey"
          
      - name: Build packages
        run: yarn build
        
      - name: Run tests
        run: yarn test:ci
        
      - name: Publish packages
        uses: changesets/action@master
        with:
          publish: yarn new-version
          commit: "chore(release): version packages"
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

